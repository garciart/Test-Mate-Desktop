K
algorithm
N
null
a set of ordered and finite steps to solve a given problem.
K
array
N
null
a collection of items in which each item can be accessed by using a unique index.
K
binary code
N
null
A computer program written using only two symbols, 0 and 1.
K
binary number system
N
null
At the most basic level, the system which computers use to represent information and code using only two symbols, 0 and 1.
K
case
N
null
statements contained in a switch block.
K
class
N
null
a set of data and methods defined between an opening brace ({) and a closing brace (}).
K
computer programs (programs)
N
null
a set of precise and complete instructions to accomplish a task.
K
constant
N
null
data fields or local variables whose value cannot be modified.
K
data types
N
null
specifies the type of data that you work with in a program, defining the size of memory needed to store the data and the kinds of operations that can be performed on the data.
K
decision structures
N
null
introduce decision-making ability into a program, enabling you to branch to different sections of the code depending on the truth value of a Boolean expression.
K
decision table
N
null
a compact and readable format for presenting the algorithm.
K
default statement
N
null
used when an expression does not match any of the cases in a switch block.
K
do-while loop
N
null
repeatedly executes a block of statements until a specified Boolean expression evaluates to false, but tests the condition at the bottom of the loop.
K
exception
N
null
an error condition that occurs during the execution of a C# program.
K
finally block
N
null
used in association with the try block, and is always executed regardless of whether an exception is thrown; often used to write clean-up code.
K
flowchart
N
null
a graphical representation of an algorithm.
K
for loop
N
null
combines the three elements of iteration—the initialization expression, the termination condition expression, and the counting expression—into a more readable code.
K
foreach loop
N
null
useful for iterating through the elements of a collection.
K
high-level language
N
null
Languages such as C#, Visual Basic, or Java that allow you to write precise instructions in a human-readable form. 
K
if statement
N
null
executes a given sequence of statements only if the corresponding Boolean expression evaluates to true.
K
if-else statement
N
null
allows your program to perform one action if the Boolean expression evaluates to true and a different action if the Boolean expression evaluates to false.
K
methods
N
null
code blocks containing a series of statements, which can receive input via arguments and can return a value to the caller.
K
operator
N
null
a symbol that specifies which operation to perform on the operands before returning a result.
K
recursion
N
null
a programming technique that causes a method to call itself in order to compute a result.
K
switch block
N
null
can include one or more case statements or a default statement.
K
switch statement
N
null
allows multi-way branching, and, in many cases, it can simplify a complex combination of if-else statements.
K
try-catch-finally block
N
null
a code block that throws and handles exceptions to prevent program execution from terminating.
K
variable
N
null
temporary storage for values during the execution of a program.
K
while loop
N
null
repeatedly executes a block of statements until a specified Boolean expression evaluates to false.
M
Review the following code snippet:\nint n = 20;\nint d = n++ + 5;\nWhat will be the value of d after this code snippet is executed?
N
null
3
25
26
27
28
The answer is 25, since n is incremented only after the assignment (d = n + 5) is completed.
M
Review the following code snippet:\nprivate static void WhileTest() {\n\tint i = 1;\n\twhile (i < 5) {\n\t\tConsole.WriteLine("The value of i = {0}", i);\n\t\ti++;\n\t}\n}\nHow many times will the while loop be executed in this code snippet?
N
null
3
4
0
1
5
The answer is 4, since i starts at one and the loop will only run while i is less than 5.
M
Review the following code snippet:\nint number1 = 10;\nint number2 = 20;\nif (number2 > number1)\nConsole.WriteLine("number1");\nConsole.WriteLine("number2");\nWhat output will be displayed after this code snippet is executed?
N
null
3
number1\nnumber2
number1
number2
number2\nnumber1
Since the condition is true and Console.WriteLine("number2"); is not part of the if statement, the answer is:\nnumber1\nnumber2
M
In a switch statement, if none of the case statements match the switch expression, then control is transferred to which statement?
N
null
3
default
break
continue
return
Control is transfered to the default statement.
M
You need to write code that closes a connection to a database and you need to make sure this code is always executed regardless of whether an exception is thrown. Where should you write this code?
N
null
3
Within a try block
Within a catch block
Within a finally block
Within the Main method
The finally block is always executed regardless of whether an exception is thrown.
M
You need to store values ranging from 0 to 255. You also need to make sure that your program minimizes memory use. Which data type should you use to store these values?
N
null
3
byte
char
short
int
A byte can store values between 0 and 255. A char and short in C# is two bytes, while an int may be four bytes.
M
If you don’t have a base case in your recursive algorithm, you create an infinite recursion. An infinite recursion will cause your program to throw an exception. Which exception will your program throw in such a case?
N
null
3
StackOverflowException
OutOfMemoryException
DivideByZeroException
InvalidOperationException
An infinite recursion will cause your computer to run out of memory and throw a System.StackOverflowException exception
M
You are learning how to develop repetitive algorithms in C#. You write the following method:\nprivate static void ForTest() {\n\tfor(int i = 1; i < 5;) {\n\t\tConsole.WriteLine("The value of i = {0}", i);\n\t}\n}\nHow many repetitions will the for loop in this code perform?
N
null
3
Infinite repetitions
0
4
5
Since i is not incremented and the condition will always be true, the loop will continue infinitely.
M
Which of the following C# features should you use to organize code and create globally unique types?
N
null
3
Namespace
Assembly
Class
Data type
Namespaces are used to organize classes and uniquely identify them.
M
You write the following code snippet:\nint[] numbers = {1, 2, 3, 4};\nint val = numbers[1];\nYou also create a variable of the RectangleHandler type like this:\nRectangleHandler handler;\nWhat is the value of the variable val after this code snippet is executed?
N
null
3
2
1
3
4
The answer is 2, since numbers[0] = 1, numbers[1] = 2, etc., and val = numbers[1].
T
The switch statement selects for execution a statement list having an associated label that corresponds to the value of an expression.
N
null
false
The switch statement selects for execution a statement list having an associated label that corresponds to the value of an expression.
T
The if-else loop tests the condition at the bottom of the loop instead of at the top.
N
null
false
The do-while loop tests the condition at the bottom of the loop instead of at the top.
T
The only operator that takes three arguments is the ?: operator.
N
null
true
The only operator that takes three arguments is the ?: operator.
T
The foreach loop is the most compact way to iterate through the items in a collection.
N
null
true
The foreach loop is the most compact way to iterate through the items in a collection.
T
On a 32-bit computer, a variable of int data type takes two bytes of memory.
N
null
true
On a 32-bit computer, a variable of int data type takes two bytes of memory.
T
To access the first element of an array, you use an index of 1.
N
null
false
To access the first element of an array, you use an index of 0.
T
Recursion is a programming technique that causes a method to call itself in order to compute a result.
N
null
true
Recursion is a programming technique that causes a method to call itself in order to compute a result.
T
Variables are data fields whose value cannot be modified.
N
null
false
Constants are data fields or local variables whose value cannot be modified.
T
When an algorithm involves a large number of conditions, a(n) decision table is a compact and readable format for presenting the algorithm.
N
null
true
When an algorithm involves a large number of conditions, a(n) decision table is a compact and readable format for presenting the algorithm.
T
A(n) flowchart is a graphical representation of an algorithm.
N
null
true
A(n) flowchart is a graphical representation of an algorithm.